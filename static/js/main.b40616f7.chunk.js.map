{"version":3,"sources":["Constants/storageNames.js","TodoContext/index.js","hooks/useLocalStorage.js","utils/_id.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","Skeletons/TodoSkeleton/index.js","App/AppUI.js","App/index.js","index.js"],"names":["STORAGE_NAMES","TodoContext","React","createContext","TodoProvider","props","valueName","initialValue","useState","error","setError","loading","setLoading","value","setValues","useEffect","setTimeout","parsedValue","localStorageValue","localStorage","getItem","JSON","parse","setItem","stringify","saveValue","newValue","stringifiedValue","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","modalState","setModalState","completedTodos","filter","todo","completed","length","totalTodos","Provider","deleteTodo","id","filteredTodos","_id","completeTodo","todoIndex","findIndex","updatedTodos","toggleModal","addTodo","todoText","newTodo","date","Date","year","getFullYear","month","getMonth","day","getDay","time","getTime","console","log","children","TodoCounter","useContext","total","className","TodoSearch","type","placeholder","onChange","evt","target","TodoList","TodoItem","onClick","TodoForm","setTodo","onSubmit","event","preventDefault","CreateTodoButton","Modal","state","createPortal","document","getElementById","TodoSkeleton","P","message","style","color","textAlign","AppUI","searchTodo","Array","fill","map","index","key","String","toLowerCase","includes","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b40616f7.chunk.js","sourcesContent":["const STORAGE_NAMES = {\n  TODOS: \"TODOS_V1\",\n};\n\nexport { STORAGE_NAMES };\n","import React, { useState } from \"react\";\nimport { _id } from \"../utils/_id\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport { STORAGE_NAMES } from \"../Constants/storageNames\";\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  const {\n    value: todos,\n    saveValue: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(STORAGE_NAMES.TODOS, []);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [modalState, setModalState] = useState(false);\n\n  const completedTodos = todos.filter((todo) => todo.completed).length;\n  const totalTodos = todos.length;\n\n  // Cambia el estado del modal\n  const toggleModal = () => {\n    setModalState(!modalState);\n  };\n\n  // Agreagar un nuevo TODO\n  const addTodo = (todoText) => {\n    try {\n      const generatedId = _id();\n      const newTodo = { todo: todoText, completed: false, _id: generatedId };\n      saveTodos([...todos, newTodo]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Eliminar TODO\n  const deleteTodo = (id) => {\n    const filteredTodos = todos.filter(({ _id }) => _id !== id);\n    saveTodos(filteredTodos);\n  };\n\n  // Marcar TODO como completado\n  const completeTodo = (id) => {\n    const todoIndex = todos.findIndex(({ _id }) => _id === id);\n    const updatedTodos = [...todos];\n    updatedTodos[todoIndex].completed = !todos[todoIndex].completed;\n    saveTodos(updatedTodos);\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        todos,\n        saveTodos,\n        loading,\n        error,\n        deleteTodo,\n        completeTodo,\n        completedTodos,\n        totalTodos,\n        searchValue,\n        setSearchValue,\n        modalState,\n        toggleModal,\n        addTodo,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoProvider, TodoContext };\n","import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(valueName, initialValue) {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [value, setValues] = useState(initialValue);\n\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageValue = localStorage.getItem(valueName);\n        let parsedValue;\n\n        if (!localStorageValue) {\n          localStorage.setItem(valueName, JSON.stringify(initialValue));\n          parsedValue = initialValue;\n        } else {\n          parsedValue = JSON.parse(localStorageValue);\n        }\n\n        setValues(parsedValue);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n\n  const saveValue = (newValue) => {\n    try {\n      const stringifiedValue = JSON.stringify(newValue);\n      localStorage.setItem(valueName, stringifiedValue);\n      setValues(newValue);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return { value, saveValue, loading, error };\n}\n\nexport { useLocalStorage };\n","function _id() {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDay();\n  const time = date.getTime();\n  return `${day}${month}${year}${time}`;\n}\n\nexport { _id };\n","import { useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoCounter.css\";\n\nfunction TodoCounter() {\n  const { completedTodos: completed, totalTodos: total } =\n    useContext(TodoContext);\n\n  return (\n    <h1 className=\"TodoCounter--title\">{`Has completado ${completed} de ${total} TODOs`}</h1>\n  );\n}\n\nexport { TodoCounter };\n","import { useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = useContext(TodoContext);\n\n  const onChangeSearchValue = (evt) => {\n    setSearchValue(evt.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch--input\"\n      type=\"text\"\n      placeholder=\"Buscar tarea\"\n      onChange={onChangeSearchValue}\n      value={searchValue}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import \"./TodoList.css\";\n\nfunction TodoList({ children }) {\n  return <div className=\"TodoList\">{children}</div>;\n}\n\nexport { TodoList };\n","import \"./TodoItem.css\";\n\nfunction TodoItem({ _id, completed, todo, deleteTodo, completeTodo }) {\n  const onComplete = () => {\n    completeTodo(_id);\n  };\n  const onDelete = () => {\n    deleteTodo(_id);\n  };\n\n  return (\n    <div className=\"TodoItem\">\n      <span\n        className={`\n          TodoItem--Status\n          ${completed ? \"completed\" : \"not-completed\"}\n        `}\n        onClick={onComplete}\n      />\n      <p className={`TodoItem--Todo ${completed && \"underline\"}`}>{todo}</p>\n      <span className=\"TodoItem--Delete\" onClick={onDelete}>\n        X\n      </span>\n    </div>\n  );\n}\n\nexport { TodoItem };\n","import { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoForm.css\";\n\nfunction TodoForm() {\n  const { addTodo } = useContext(TodoContext);\n  const [todo, setTodo] = useState(\"\");\n\n  const onSubmitForm = (event) => {\n    event.preventDefault();\n    if (todo.length !== 0) {\n      addTodo(todo);\n      setTodo(\"\");\n    }\n  };\n\n  const onChangeTodoText = (event) => {\n    setTodo(event.target.value);\n  };\n\n  return (\n    <form className=\"TodoForm\" onSubmit={onSubmitForm}>\n      <h1>Que haras ahora?</h1>\n      <textarea\n        placeholder=\"Puedes escribir tu tarea aquí\"\n        onChange={onChangeTodoText}\n        value={todo}\n      ></textarea>\n      <button>Agregar</button>\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import \"./CreateTodoButton.css\";\n\nfunction CreateTodoButton({ onClick }) {\n  return (\n    <button className=\"CreateTodoButton\" onClick={onClick}>\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import \"./Modal.css\";\nimport { createPortal } from \"react-dom\";\n\nfunction Modal({ children, state, toggleModal }) {\n  if (!state) return null;\n  return createPortal(\n    <div className=\"Modal__Container\">\n      <div className=\"Modal__Content\">\n        <button onClick={toggleModal} className=\"Modal__Button--close\">\n          X\n        </button>\n        <div className=\"Modal__Content--div\">{children}</div>\n      </div>\n    </div>,\n    document.getElementById(\"modal\")\n  );\n}\n\nexport { Modal };\n","import \"./TodoSkeleton.css\";\n\nfunction TodoSkeleton() {\n  return (\n    <div className=\"TodoSkeleton\">\n      <div className=\"TodoSkeleton__Status\"></div>\n      <div className=\"TodoSkeleton__Text\">\n        <p></p>\n        <p></p>\n        <p></p>\n      </div>\n      <div className=\"TodoSkeleton__Close\">\n        <button>x</button>\n      </div>\n    </div>\n  );\n}\n\nexport { TodoSkeleton };\n","import { useContext } from \"react\";\n\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoForm } from \"../TodoForm\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { TodoContext } from \"../TodoContext\";\nimport { Modal } from \"../Modal\";\n\n// mook\nimport { TodoSkeleton } from \"../Skeletons/TodoSkeleton\";\n\nconst P = ({ message }) => {\n  return <p style={{ color: \"white\", textAlign: \"center\" }}>{message}</p>;\n};\n\nexport const AppUI = ({ searchTodo }) => {\n  const {\n    error,\n    loading,\n    todos,\n    searchValue,\n    deleteTodo,\n    completeTodo,\n    modalState,\n    toggleModal,\n  } = useContext(TodoContext);\n\n  return (\n    <>\n      <TodoCounter />\n      <TodoSearch />\n      <TodoList>\n        {error && <P message=\"A ocurrido un error al cargar los todos\" />}\n        {loading &&\n          new Array(3).fill().map((index, key) => <TodoSkeleton key={key} />)}\n        {!loading && todos.length === 0 && (\n          <P message=\"Crea tu primer TODO :D\" />\n        )}\n        {todos.filter(searchTodo(searchValue)).map((todo) => (\n          <TodoItem\n            key={todo._id}\n            {...todo}\n            deleteTodo={deleteTodo}\n            completeTodo={completeTodo}\n          />\n        ))}\n      </TodoList>\n      <Modal state={modalState} toggleModal={toggleModal}>\n        <TodoForm />\n      </Modal>\n      <CreateTodoButton onClick={toggleModal} />\n    </>\n  );\n};\n","import { TodoProvider } from \"../TodoContext\";\n\nimport { AppUI } from \"./AppUI\";\n\n// Función para filtrar los TODOs\nconst searchTodo =\n  (searchValue) =>\n  ({ todo }) => {\n    return String(todo).toLowerCase().includes(searchValue.toLowerCase());\n  };\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI searchTodo={searchTodo} />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}